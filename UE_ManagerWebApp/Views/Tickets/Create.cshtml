@model UE_ManagerWebApp.Models.Tickets

@{
    ViewData["Title"] = "Create";
}


<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-3-typeahead/4.0.2/bootstrap3-typeahead.min.js"></script>



<h1>Nuevo</h1>

<h4>Incidente</h4>
<hr />
<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="TicketNumber" class="control-label"></label>
        <input asp-for="TicketNumber" class="form-control" type="number" />
        <span asp-validation-for="TicketNumber" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Keyword" class="control-label"></label>
        <input asp-for="Keyword" class="form-control" />
        <span asp-validation-for="Keyword" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="AssignDate" class="control-label"></label>
        <input asp-for="AssignDate" class="form-control" type="datetime-local" />
        <span asp-validation-for="AssignDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="EndDate" class="control-label"></label>
        <input asp-for="EndDate" class="form-control" type="datetime-local" />
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Comment" class="control-label"></label>
        <textarea asp-for="Comment" class="form-control" rows="4" type="text"></textarea>
        <span asp-validation-for="Comment" class="text-danger"></span>
    </div>
    <div class="form-group">
        @*<label asp-for="AssignUser" class="control-label"></label>
            <input asp-for="AssignUser" class="form-control" />
            <span asp-validation-for="AssignUser" class="text-danger"></span>*@

        <label asp-for="AssignUser" class="control-label"></label>
        <input asp-for="AssignUser" type="text" class="form-control" id="productName" placeholder="Digite un usuario" />
        <span asp-validation-for="AssignUser" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label asp-for="CustomerId" class="control-label"></label>
        <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
    </div>
    <div class="form-group">
        <label asp-for="ApplicationId" class="control-label"></label>
        <select asp-for="ApplicationId" class="form-control" asp-items="ViewBag.ApplicationId"></select>
    </div>
    <div class="form-group">
        <label asp-for="DepartmentId" class="control-label"></label>
        <select asp-for="DepartmentId" class="form-control" asp-items="ViewBag.DepartmentId"></select>
    </div>
    <div class="form-group">
        <label asp-for="CauseId" class="control-label"></label>
        <select asp-for="CauseId" class="form-control" asp-items="ViewBag.CauseId"></select>
    </div>

    <div class="row">
        <div class="form-group col-md-5"> <input type="text" id="select" class="form-control" /> </div>
        <div class="form-group col-md-5"> <input type="text" id="update" disabled class="form-control" /> </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Crear" class="btn btn-primary" />
    </div>
</form>


<div>
    <a class="btn btn-dark" type="button" asp-action="Index" role="button">Regresar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            $('#productName').autocomplete({
                source: '/api/user/search'
            });
        });

        $("#select").typeahead({
            minLength: 1,
            source: function (request, response) {
                $.ajax({
                    url: "/Users/GetList/",
                    data: {
                        "name": request
                    },
                    type: "GET",
                    contentType: "json",
                    success: function (data) {
                        items = [];
                        map = {};
                        $.each(data, function (i, item) {
                            var id = item.Name;
                            var name = item.Name;
                            map[name] = {
                                id: id,
                                name: name
                            };
                            items.push(name);
                        });
                        response(items);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            updater: function (item) { //If simultaneously want to update value somewhere else $("#update").val(map[item].id); return item; } });    

    </script>
}

